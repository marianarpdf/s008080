$sentClr: $clrLight;
$placeholderClr: $clrGrayLight;
$textPaddingMob: $safeArea;
$textPaddingTab: 20vw;

.bot {
    @include centerxy;
    position: fixed;
    width: 100vw;
    background: rgba($clrLight, 0.9);
    z-index: 99;
    transition: height $speed ease-out;
    height: 0;
    display: block;

    &.jsLoading {
        height: 100vh;
    }

    &-trigger {
        padding-left: $safeArea;
    }

    &-inner {
        position: relative;
        @include centerxy;
        width: 100%;
        width: 100vw;
        height: 0;
        max-height: 90vh;
        overflow: auto;
        background: $clrDark;
        animation: bgBreath 3s ease-in-out infinite;
        color: $clrPrimarySoft;
        transition: height $speed ease-out;
        @extend %flexbox;
        @include flexboxProp {
            flex-direction: column;
            justify-content: flex-end;
        }



        &.jsLoading {
            height: $safeArea*35;
        }
    }

    &-text {
        position: relative;
        width: 100%;
        margin: 0 auto;
        height: auto;
        max-height: 100%;
        overflow: auto;
        padding: $safeArea $textPaddingMob $safeArea*2;
        font-family: $font-mono;
        font-size: $fontS;
    }

    &-answer {
        &:before {
            content: "_";
            position: absolute;
            color: $sentClr;
            left: calc(#{$textPaddingMob} - #{$safeArea/2});
        }
    }
    &-sent {
        min-height: $safeArea;
        color: $sentClr;
        margin-left: -$safeArea;
    }

    &-input {
        background: none;
        border: none;
        color: $sentClr;
        font-size: $fontM;
        display: inline;
        font-family: $font-mono;
        width: 100%;

        &::-webkit-input-placeholder {
             color: $placeholderClr;
        }
        &:-moz-placeholder {
            color: $placeholderClr;
        }
        &::-moz-placeholder {
            color: $placeholderClr;
        }
        &:-ms-input-placeholder { /* Internet Explorer 10-11 */
           color: $placeholderClr;
        }

        &:focus {
            width: 100%;
            outline: none;
        }
    }

    @include media(tablet) {
        &-text {
            padding: $safeArea $textPaddingTab $safeArea*2;
        }
    }
}

.jsBotThinking {
    position: absolute;
    left: calc(#{$textPaddingMob} - #{$safeArea/2});
    bottom: $safeArea*1;
    &:before {
        color: $clrLight;
        content: "0 * . _ ;";
        display: block;
        animation: botThinking 700ms infinite;
    }
}

@keyframes bgBreath {
    0% {background: $clrBlack;}
    50% {background: $clrDark;}
    100% {background: $clrBlack;}
}

@keyframes botThinking {
    0% {content: "..";}
   20% {content: "8";}
   40% {content: "0";}
   60% {content: "_";}
   80% {content: "8";}
  100% {content: "0";}
}


.js-botTrigger {
    pointer-events: all;
    * {
        opacity: 1;
        color: $clrPrimary;
        animation: glitch 1s steps(100) 1;
        font-weight: $fBold;
    }

    &.jsLoading {
        pointer-events: none;
        * {
            opacity: 0;
            color: $clrDark;
            animation: none;
        }

        *.js-aboutVisible {
            opacity: 0.5;
            // animation: glitch 500ms steps(50) 1;
        }
    }
}

//typed.js
.typed-cursor{
    display: none;
    // opacity: 1;
    // -webkit-animation: blink 0.7s infinite;
    // -moz-animation: blink 0.7s infinite;
    // animation: blink 0.7s infinite;
}
// @keyframes blink{
//     0% { opacity:1; }
//     50% { opacity:0; }
//     100% { opacity:1; }
// }
// @-webkit-keyframes blink{
//     0% { opacity:1; }
//     50% { opacity:0; }
//     100% { opacity:1; }
// }
// @-moz-keyframes blink{
//     0% { opacity:1; }
//     50% { opacity:0; }
//     100% { opacity:1; }
// }
